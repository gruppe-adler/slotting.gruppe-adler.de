{"version":3,"sources":["webpack:///./src/views/Edit.vue?4368","webpack:///./src/views/Edit.vue","webpack:///./src/views/Edit.vue?3c9f","webpack:///./src/views/Edit.vue?249e"],"names":["aria-busy","style","error","type","role","showXMLEditor","$t","icon","text","cancelEdit","primary","xml","model","match","editMode","loading","created","matchUUID","tid","this","$store","dispatch","catch","err","then","state","matches","undefined","clone","finally","processXML","value","toXML","fromXML","$router","push","path","query","EditView","components","Match","ForumButton","Loader","render","__scopeId"],"mappings":"iIAAA,W,oHCOQA,YAAU,OACVC,MAAA,4D,YAqBA,eAAe,sB,0HA5BP,EAAK,O,iBAAjB,eAGO,wBADA,EAAAC,OAAK,IAGG,EAAO,S,iBADtB,eAMO,OANP,EAMO,CADH,eAAU,O,iBAEd,eAkBO,UAjBH,eAGQ,c,eAFJ,eAA+D,SAAxDC,KAAK,WAAWC,KAAK,S,qCAAkB,EAAAC,cAAa,I,mBAAb,EAAAA,iBAC9C,eAAkC,2BAAzB,EAAAC,GAAG,cAAD,KAEf,eAIE,GAHEC,KAAK,QACJC,KAAM,EAAAF,GAAG,UACT,QAAO,EAAAG,Y,2BAEZ,eAIE,GAHEF,KAAK,OACJC,KAAM,EAAAF,GAAG,eACTI,SAAS,G,iBAEE,EAAa,c,iCAA7B,eAAwD,Y,2CAAhB,EAAAC,IAAG,I,oBAAH,EAAAA,Q,iBACxC,eAAgD,G,MAAjCC,MAAO,EAAAC,MAAQC,UAAU,G,mBACxC,K,qHCZR,yE,OACY,EAAAZ,MAAoB,KACpB,EAAAa,SAAU,EACV,EAAAF,MAAoB,KACpB,EAAAR,eAAgB,EAChB,EAAAM,IAAM,G,EA+BlB,OApCsC,oBAO3B,YAAAK,QAAP,sBACUC,EAAY,iBACZC,EAAM,iBAEZC,KAAKC,OAAOC,SAAS,YAAa,CAAEH,IAAG,EAAED,UAAS,IAC7CK,OAAM,SAAAC,GAAS,EAAKrB,MAAQqB,KAC5BC,MAAK,WACF,IAAMX,EAAQ,EAAKO,OAAOK,MAAMC,QAAQT,QAC1BU,IAAVd,IAEJ,EAAKA,MAAQA,EAAMe,YAEtBC,SAAQ,WAAQ,EAAKd,SAAU,MAIhC,YAAAe,WAAR,SAAoBC,GACG,OAAfZ,KAAKN,QAELkB,EACAZ,KAAKR,IAAMQ,KAAKN,MAAMmB,QAEtBb,KAAKN,MAAQ,OAAMoB,QAAQd,KAAKR,OAIhC,YAAAF,WAAR,WACIU,KAAKe,QAAQC,KAAK,CAAEC,KAAM,YAAaC,MAAO,CAAEnB,IAAK,qBAXzD,gBADC,eAAM,kB,+BAtBUoB,EAAQ,gBAP5B,eAAQ,CACLC,WAAY,CACRC,MAAOA,EAAA,KACPC,YAAaA,EAAA,KACbC,OAAQA,EAAA,SAGKJ,GAoCrB,EApCA,CAAsC,QAAjB,I,UCZrB,EAAOK,OAASA,EAChB,EAAOC,UAAY,kBAEJ","file":"js/edit.ae86c7b1.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Edit.vue?vue&type=style&index=0&id=e0e98d5a&lang=scss&scoped=true\"","<template>\n    <main v-if=\"error\">\n        <!-- TODO: Error has to be pretty -->\n        {{ error }}\n    </main>\n    <main\n        v-else-if=\"loading\"\n        aria-busy=\"true\"\n        style=\"padding: 2rem; display: flex; justify-content: center;\"\n    >\n        <Loader />\n    </main>\n    <main v-else>\n        <label>\n            <input type=\"checkbox\" role=\"switch\" v-model=\"showXMLEditor\" />\n            <span>{{ $t('XMLEditor') }}</span>\n        </label>\n        <ForumButton\n            icon=\"times\"\n            :text=\"$t('cancel')\"\n            @click=\"cancelEdit\"\n        />\n        <ForumButton\n            icon=\"save\"\n            :text=\"$t('saveChanges')\"\n            :primary=\"true\"\n        />\n        <textarea v-if=\"showXMLEditor\" v-model=\"xml\"></textarea>\n        <Match v-else :model=\"match\" :editMode=\"true\" />\n        <aside></aside>\n    </main>\n</template>\n\n<script lang=\"ts\">\nimport { getMatchID, getTopicID } from '@/services/slotting';\nimport { Options, Vue } from 'vue-class-component';\nimport { Watch } from 'vue-property-decorator';\nimport MatchVue from '@/components/Slotting/Match.vue';\nimport ForumButton from '@/components/ForumButton.vue';\nimport { jsonToXML, parseXML } from '@/services/utils/edit';\nimport { Match } from '@/models';\nimport LoaderVue from '@/components/Loader.vue';\n\n@Options({\n    components: {\n        Match: MatchVue,\n        ForumButton: ForumButton,\n        Loader: LoaderVue\n    }\n})\nexport default class EditView extends Vue {\n    private error: Error|null = null;\n    private loading = true;\n    private match: Match|null = null;\n    private showXMLEditor = false;\n    private xml = '';\n\n    public created (): void {\n        const matchUUID = getMatchID();\n        const tid = getTopicID();\n\n        this.$store.dispatch('loadMatch', { tid, matchUUID })\n            .catch(err => { this.error = err; })\n            .then(() => {\n                const match = this.$store.state.matches[matchUUID];\n                if (match === undefined) return;\n\n                this.match = match.clone();\n            })\n            .finally(() => { this.loading = false; });\n    }\n\n    @Watch('showXMLEditor')\n    private processXML (value: boolean) {\n        if (this.match === null) return;\n\n        if (value) {\n            this.xml = this.match.toXML();\n        } else {\n            this.match = Match.fromXML(this.xml);\n        }\n    }\n\n    private cancelEdit () {\n        this.$router.push({ path: '/slotting', query: { tid: getTopicID() } });\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\nmain {\n    display: grid;\n    grid-template:\n        \"inputs abort save\" auto\n        \"slotlist shelf shelf\" auto / 1fr auto auto;\n\n    column-gap: .5rem;\n    row-gap: 1rem;\n}\n\naside {\n    grid-area: shelf;\n}\nlabel {\n    grid-area: inputs;\n    cursor: pointer;\n    font-size: 0.9rem;\n    padding: .5em .25em;\n    display: inline-flex;\n    align-items: center;\n    user-select: none;\n    justify-self: flex-start;\n\n    &:focus, &:hover {\n        background-color: var(--c-surf-3);\n    }\n}\ntextarea{\n    min-height: 70em;\n}\n</style>\n","\nimport { getMatchID, getTopicID } from '@/services/slotting';\nimport { Options, Vue } from 'vue-class-component';\nimport { Watch } from 'vue-property-decorator';\nimport MatchVue from '@/components/Slotting/Match.vue';\nimport ForumButton from '@/components/ForumButton.vue';\nimport { jsonToXML, parseXML } from '@/services/utils/edit';\nimport { Match } from '@/models';\nimport LoaderVue from '@/components/Loader.vue';\n\n@Options({\n    components: {\n        Match: MatchVue,\n        ForumButton: ForumButton,\n        Loader: LoaderVue\n    }\n})\nexport default class EditView extends Vue {\n    private error: Error|null = null;\n    private loading = true;\n    private match: Match|null = null;\n    private showXMLEditor = false;\n    private xml = '';\n\n    public created (): void {\n        const matchUUID = getMatchID();\n        const tid = getTopicID();\n\n        this.$store.dispatch('loadMatch', { tid, matchUUID })\n            .catch(err => { this.error = err; })\n            .then(() => {\n                const match = this.$store.state.matches[matchUUID];\n                if (match === undefined) return;\n\n                this.match = match.clone();\n            })\n            .finally(() => { this.loading = false; });\n    }\n\n    @Watch('showXMLEditor')\n    private processXML (value: boolean) {\n        if (this.match === null) return;\n\n        if (value) {\n            this.xml = this.match.toXML();\n        } else {\n            this.match = Match.fromXML(this.xml);\n        }\n    }\n\n    private cancelEdit () {\n        this.$router.push({ path: '/slotting', query: { tid: getTopicID() } });\n    }\n}\n","import { render } from \"./Edit.vue?vue&type=template&id=e0e98d5a&scoped=true\"\nimport script from \"./Edit.vue?vue&type=script&lang=ts\"\nexport * from \"./Edit.vue?vue&type=script&lang=ts\"\n\nimport \"./Edit.vue?vue&type=style&index=0&id=e0e98d5a&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-e0e98d5a\"\n\nexport default script"],"sourceRoot":""}